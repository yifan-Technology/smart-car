@startuml
scale 1920 width

 
[*] --> guiState
[*] --> camera
[*] --> coreState
[*] --> cabinetState

state guiState{
    [*] --> initGUI
    initGUI: c name: 初始化GUI
    initGUI : trigger: initGUISuccess
    initGUI : CPP: init gui state

    
    initGUI --> guiReset: resetButton
    guiReset: c name: 重置键
    guiReset: CPP: reset
    guiReset --> initGUI: GUIreset

    initGUI --> guiManual: manualButton
    guiManual: c name: 手动键
    guiManual: CPP: reset
    guiManual --> initGUI: GUIreset

    initGUI --> guiMAuto: autoButton
    guiMAuto: c name: 自动键
    guiMAuto: CPP: reset
    guiMAuto --> initGUI: GUIreset


}

state camera{

    [*] --> init
    init : c name: 初始化
    init : CPP: init Camera,pose,object,point

    init --> mergeCamera : mergeCaptureSuccess
    mergeCamera: c name: 合成图像
    mergeCamera: CPP: caputure mergecamera image

    mergeCamera --> None: smting
    None: c name: 悬空，快递柜后续
    None: CPP: --

    init --> leftCamera : initSuccess
    leftCamera: c name: 左侧摄像头
    leftCamera: CPP: caputure left camera image


    leftCamera --> waitSelect : objectDetectionSuccess
    waitSelect: c name: 等待选择
    waitSelect: CPP: None

    waitSelect --> cameraLock: guiLockSelect
    cameraLock: c name: GUI锁定
    cameraLock: CPP: lock frame && publish number

    cameraLock--> userSelect: guiUserSelect
    userSelect: c name: 用户选择
    userSelect: CPP: select target

    userSelect--> findTarget: findTarget
    findTarget: c name: 追踪中
    findTarget: CPP: tarcking

    searchTarget--> findTarget: findTarget
    findTarget: c name: 追踪中
    findTarget: CPP: tarcking

    findTarget--> searchTarget: lostTarget
    searchTarget: c name: 搜索中
    searchTarget: CPP: searching
}

state coreState{
    [*] --> initCore
    initCore : c name: 初始化
    initCore : CPP: init DWA, ros sub

    initCore --> reset: initCoreSuccess
    reset : c name: 重置
    reset : CPP: reset all state && hold the car 

    reset --> trackTarget: GUIautButton
    trackTarget : c name: 目标跟踪
    trackTarget : CPP: start track algo. 
    trackTarget --> reset: GUIreset

    reset --> GUImanual: GUImanualButton
    GUImanual : c name: 手动控制
    GUImanual : CPP: user Control the Vehicle with GUI 
    GUImanual --> reset: GUIreset

    reset --> ParkIn: CabParkIn
    ParkIn : c name: 入库
    ParkIn : CPP: park in. 
    ParkIn --> reset: GUIreset

    reset --> moveOut: CabMoveOut
    moveOut : c name: 出库
    moveOut : CPP: move out. 
    moveOut --> reset: GUIreset

    reset --> retureHome: GUIbackButton  
    retureHome : c name: 返回
    retureHome : CPP: back to home 
    retureHome --> reset: GUIreset



}


state cabinetState{
    [*] --> initCabinet
    initCabinet : c name: 初始化快递柜
    initCabinet : CPP: just start

    initCabinet --> inPosition: CabParkPos  
    inPosition : c name: 指定位置
    inPosition : CPP: stay

    inPosition --> packageReady: CabPackageReady
    packageReady : c name: 货物到达
    packageReady : CPP: ready to go

    packageReady --> goOut: CabGoOutButton  
    goOut : c name: 出库
    goOut : CPP: at out Position

    goOut --> goBack: GUIback  
    goBack : c name: 返回中
    goBack : CPP: going to back

    goBack --> goIn: CabParkInPos  
    goIn : c name: 入库
    goIn : CPP: park in

    goIn --> inPosition: CabParkPos 



}
@enduml